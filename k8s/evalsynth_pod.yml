apiVersion: v1
kind: Pod
metadata:
  name: 1-inf-fast-cwdm-t1c
spec:
  nodeSelector:
    #topology.kubernetes.io/region: us-west
    nautilus.io/linstor: "true"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.product
            operator: In
            values:
            - NVIDIA-A10
            - NVIDIA-GeForce-RTX-3090
            - NVIDIA-GeForce-RTX-4090
            - NVIDIA-TITAN-RTX
            - NVIDIA-RTX-A5000
            - Quadro-RTX-6000
            - Tesla-V100-SXM2-32GB
            - NVIDIA-A40
            - NVIDIA-L40
            - NVIDIA-RTX-A6000
            - Quadro-RTX-8000

  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
    - key: nvidia.com/gpu
      operator: Exists
      effect: PreferNoSchedule
  containers:
    - name: brats-processing
      image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
      env:
        - name: REPO_PATH
          value: /app/brats-synthesis
        - name: PYTHONPATH
          value: /app/brats-synthesis
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONIOENCODING
          value: "UTF-8"
        - name: WANDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: wandb-credentials
              key: api-key
        - name: WANDB_PROJECT
          value: "cwmd-3d-brats"
        - name: WANDB_ENTITY
          value: "timgsereda"
        - name: WANDB_MODE
          value: "online"
      command: ["/bin/bash", "-c"]
      args:
        - |
          apt get install sudo
          sudo apt-get update && sudo apt-get install -y p7zip-full wget git
          pip install nibabel blobfile wandb batchgenerators simpleITK gdown monai

          git clone -b seemore https://github.com/tsereda/brats-synthesis.git ${REPO_PATH}
          cd ${REPO_PATH}

          7z x /data/ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData.tar.gz

          7z x ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData.tar

          #python fast_cwdm/scripts/drop_modality.py --drop_modality t1n --input_dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData --output_dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData-missingt1n

          mkdir -p ./checkpoints

          ls -la /data/checkpoints/
          cp /data/checkpoints/brats_*.pt  ./checkpoints/
          ls -la ./checkpoints/

          python fast_cwdm/scripts/complete_dataset.py \
            --input_dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData \
            --checkpoint_dir ./checkpoints \
            --device cuda:0 \
            --evaluation_mode \
            --target_modality t1c
          tail -f /dev/null
     
      volumeMounts:
        - name: workspace
          mountPath: /app
        - name: data
          mountPath: /data
        - name: shm
          mountPath: /dev/shm
    
      resources:
        requests:
          memory: 24Gi
          cpu: "12"
          nvidia.com/gpu: "1"
        limits:
          memory: 32Gi
          cpu: "16"
          nvidia.com/gpu: "1"
 
  volumes:
    - name: workspace
      emptyDir:
        sizeLimit: 50Gi
    - name: data
      persistentVolumeClaim:
        claimName: brats2025-1
    - name: shm
      emptyDir:
        medium: Memory
        sizeLimit: 16Gi
 
  restartPolicy: Never