apiVersion: batch/v1
kind: Job
metadata:
  name: 2-fast-cwdm-t2w
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: fast-cwdm
    spec:
      nodeSelector:
        #topology.kubernetes.io/region: us-west
        nautilus.io/linstor: "true"
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: PreferNoSchedule
      containers:
        - name: brats-processing
          image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
          env:
            - name: REPO_PATH
              value: /app/brats-synthesis
            - name: PYTHONPATH
              value: /app/brats-synthesis
            - name: CUDA_VISIBLE_DEVICES
              value: "0"
            - name: nnUNet_raw
              value: /app/nnunet/raw
            - name: nnUNet_preprocessed
              value: /app/nnunet/preprocessed
            - name: nnUNet_results
              value: /app/nnunet/results
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: PYTHONIOENCODING
              value: "UTF-8"
            - name: WANDB_API_KEY
              valueFrom:
                secretKeyRef:
                  name: wandb-credentials
                  key: api-key
            - name: WANDB_PROJECT
              value: "fast-cwmd"
            - name: WANDB_ENTITY
              value: "timgsereda"
            - name: WANDB_MODE
              value: "online"
          command: ["/bin/bash", "-c"]
          args:
            - |
              sudo apt-get update && sudo apt-get install -y p7zip-full wget git
              pip install nibabel blobfile wandb batchgenerators simpleITK gdown monai

              git clone -b ssim-loss https://github.com/tsereda/brats-synthesis.git ${REPO_PATH}
              cd ${REPO_PATH}

              7z x /data/ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData.tar.gz

              7z x ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData.tar

              #python fast_cwdm/scripts/drop_modality.py --drop_modality t1n --input_dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData --output_dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData-missingt1n

              mkdir -p ./checkpoints

              cp /data/400kCheckpoints.zip 400kCheckpoints.zip 
              unzip 400kCheckpoints.zip 

              ls -la 
              cp t1c/brats_*.pt  ./checkpoints/
              cp t1n/brats_*.pt  ./checkpoints/
              cp t2f/brats_*.pt  ./checkpoints/
              cp t2w/brats_*.pt  ./checkpoints/
              ls -la ./checkpoints/

              python fast_cwdm/scripts/complete_dataset.py \
                --input_dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData \
                --checkpoint_dir ./checkpoints \
                --device cuda:0 \
                --evaluation_mode \
                --target_modality t2w
         
          volumeMounts:
            - name: workspace
              mountPath: /app
            - name: data
              mountPath: /data
            - name: shm
              mountPath: /dev/shm
        
          resources:
            requests:
              memory: 25Gi
              cpu: "15"
              nvidia.com/a100: "1"
            limits:
              memory: 30Gi
              cpu: "18"
              nvidia.com/a100: "1"
     
      volumes:
        - name: workspace
          emptyDir:
            sizeLimit: 50Gi
        - name: data
          persistentVolumeClaim:
            claimName: brats2025-2
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 16Gi
     
      restartPolicy: Never