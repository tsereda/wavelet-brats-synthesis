apiVersion: v1
kind: Pod
metadata:
  name: brads3d-eval-2
  namespace: gai-lina-group
  labels:
    app: wandb-sweep
spec:
  nodeSelector:
    nautilus.io/linstor: "true"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.product
            operator: In
            values:
            - NVIDIA-A10
            - NVIDIA-GeForce-RTX-3090
            - NVIDIA-GeForce-RTX-4090
            - NVIDIA-TITAN-RTX
            - NVIDIA-RTX-A5000
            - Quadro-RTX-6000
            - Tesla-V100-SXM2-32GB
            - NVIDIA-A40
            - NVIDIA-L40
            - NVIDIA-RTX-A6000
            - Quadro-RTX-8000
  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
    - key: nvidia.com/gpu
      operator: Exists
      effect: PreferNoSchedule
  containers:
  - name: sweep-agent
    image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
   
    command: ["/bin/bash", "-c"]
    args:
      - |
        sudo apt-get update && sudo apt-get install -y git wget p7zip-full
        pip install nibabel
        
        # Clone repository
        echo "[2/5] Cloning repository..."
        git clone https://github.com/tsereda/wavelet-brats-synthesis.git
        cd wavelet-brats-synthesis/app/
        
        # Run setup script
        echo "[3/5] Running setup script..."
        7z x /data/ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData.tar.gz -O.
        7z x ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData.tar -o.
        mkdir checkpoints
        chmod +x checkpoints
        python setupeval.py \
          --install-deps \
          --wandb-run timgsereda/wavelet-brats-synthesis/p607sli9 \
          --checkpoint-dir checkpoints \
          --data-dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData/MICCAI_BraTS2020_ValidationData
        
        
        # Run evaluation
        echo "[4/5] Running evaluation..."
        python scripts/complete_dataset.py \
          --input_dir ASNR-MICCAI-BraTS2023-GLI-MET-ValidationData \
          --output_dir /data/synthesis_outputs \
          --checkpoint_dir checkpoints \
          --evaluation_mode \
          --evaluate_metrics \
          --target_modality t1c \
          --diffusion_steps 100 \
          --wandb_mode online \
          --wandb_project brats-evaluation
        
        if [ $? -ne 0 ]; then
            echo "❌ Evaluation failed!"
        fi
        
        echo "[5/5] Evaluation complete!"
        echo "================================="
        echo "✅ SUCCESS"
        echo "================================="
        echo "Check W&B for results: https://wandb.ai/timgsereda/brats-evaluation"
        echo "Outputs saved to: /data/synthesis_outputs"
        
        # Keep pod alive for inspection
        tail -f /dev/null
   
    env:
    - name: WANDB_API_KEY
      valueFrom:
        secretKeyRef:
          name: wandb-credentials
          key: api-key
    - name: WANDB_ENTITY
      value: "timgsereda"
    - name: WANDB_PROJECT
      value: "wavelet-brats-synthesis"
   
    resources:
      requests:
        memory: "16Gi"
        cpu: "4"
        nvidia.com/gpu: "1"
      limits:
        memory: "32Gi"
        cpu: "8"
        nvidia.com/gpu: "1"
   
    volumeMounts:
    - name: data-volume
      mountPath: /data
 
  volumes:
  - name: data-volume
    persistentVolumeClaim:
      claimName: brats2025-2