apiVersion: v1
kind: Pod
metadata:
  name: midslice-5
  namespace: gai-lina-group
  labels:
    app: wandb-sweep
spec:
  nodeSelector:
    nautilus.io/linstor: "true"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.product
            operator: In
            values:
            - NVIDIA-A10
            - NVIDIA-GeForce-RTX-3090
            - NVIDIA-GeForce-RTX-4090
            - NVIDIA-TITAN-RTX
            - NVIDIA-RTX-A5000
            - Quadro-RTX-6000
            - Tesla-V100-SXM2-32GB
            - NVIDIA-A40
            - NVIDIA-L40
            - NVIDIA-RTX-A6000
            - Quadro-RTX-8000
  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
    - key: nvidia.com/gpu
      operator: Exists
      effect: PreferNoSchedule
  containers:
  - name: sweep-agent
    image: nvcr.io/nvidia/pytorch:24.09-py3
   
    command: ["/bin/bash", "-c"]
    args:
      - |
        sudo apt-get update && sudo apt-get install -y git wget p7zip-full
        pip install wandb monai
        # Install nibabel explicitly first
        pip install nibabel>=5.0.0

        # Reinstall monai with nibabel support
        pip install --upgrade "monai[nibabel]>=1.3.0"
        pip install einops>=0.7.0
        pip install blobfile
       
        git clone https://github.com/tsereda/wavelet-brats-synthesis.git
        cd wavelet-brats-synthesis/slice-prediction


        unzip /data/brats20-dataset-training-validation.zip
        pip install PyWavelets
        wandb agent timgsereda/wavelet-brats-synthesis-slice-prediction/h848gu3r

        tail -f /dev/null
   
    env:
    - name: WANDB_API_KEY
      valueFrom:
        secretKeyRef:
          name: wandb-credentials
          key: api-key
    - name: WANDB_ENTITY
      value: "timgsereda"
    - name: WANDB_PROJECT
      value: "wavelet-brats-synthesis"
    resources:
      requests:
        memory: "16Gi"
        cpu: "4"
        nvidia.com/gpu: "1"
      limits:
        memory: "32Gi"
        cpu: "8"
        nvidia.com/gpu: "1"
   
    volumeMounts:
    - name: data-volume
      mountPath: /data
    - name: shm
      mountPath: /dev/shm
 
  volumes:
  - name: data-volume
    persistentVolumeClaim:
      claimName: brats2025-5
  - name: shm
    emptyDir:
      medium: Memory
      sizeLimit: 8Gi